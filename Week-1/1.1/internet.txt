When an URL is entered in the browser, the request is goes through a series of protocol layers. 
The IP address of the Destination is fetched using DNS this is then appended to the request packet which is then sent to the 
router.
Once the request is approved by the destination server a copy of the requested website is sent as HTML to the browser.

This happens through various protocols – Application layer (HTTP/SMTP), Transport Layer (TCP). Internet protocol later(IP), 
backbone.

The browser broadly consists of the following components: UI layer, Browser engine, rendering engine , 
networking, JS interpreter, UI Backend.

UI layer – Buttons to navigate the webpage
Browser engine – interface between rendering engine and the UI layer
Rendering engine – is explained in more detail below
Networking – used for managing network calls through various protocols 
JS interpreter – interprets the js scripts.

The main components of the browser that load the content of the page are : Parsers, rendering engine. tree constructors
, and script processors.
Once the HTML is received from the destination server - it is parsed through a HTML parser which 
converts the data into a DOM tree. The parser converts the html into code that the machine can understand. 
The html code is parsed and any  relevant stylesheets and scripts needed for the webpage are fetched. 
Simultaneously a render tree is generated (where the layout, position of the elements and colours are determined). 
Each browser has a different renderer – Webkit for Chrome. 

Layout rendering is required for ordering and positioning of the elements. 
The painting part of rendering is used to generate boxes (CSS box model) for all the elements.
Once the rendering process is complete the webpage is available to the user. 
